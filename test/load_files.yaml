database: test
pre_ingest:
  - CREATE CONSTRAINT nkPerson IF NOT EXISTS ON(n:Person) ASSERT (n.personId) IS NODE KEY;
  - CREATE CONSTRAINT nkMovie IF NOT EXISTS ON(n:Movie) ASSERT (n.movieId) IS NODE KEY;

datafiles:
  # Person
  - url: file:///Users/josealvarado-guzman/Python_Devel/PyNeoIngest/test/people.csv
    cypher:
      - |
        WITH $rows AS rows
        UNWIND rows AS row
        MERGE(p:Person {personId:row.personId})
          ON CREATE
            SET p.personId=row.personId,
                p.name=row.name,
                p.birthYear=toInteger(row.birthYear)
  # Movie
  - url: file:////Users/josealvarado-guzman/Python_Devel/PyNeoIngest/test/movies.csv
    cypher:
      - |
        WITH $rows AS rows
        UNWIND rows AS row
        MERGE(m:Movie {movieId:row.movieId})
          ON CREATE
            SET m.movieId=row.movieId,
                m.titel=row.title,
                m.averageVote=toFloat(row.avgVote),
                m.releaseYear=toInteger(row.releaseYear),
                m.genres=split(row.genres,':')
  # Role
  - url: file:////Users/josealvarado-guzman/Python_Devel/PyNeoIngest/test/roles.csv
    cypher:
      - |
        WITH $rows AS rows
        UNWIND rows AS row
        MATCH(p:Person {personId:row.personId}),(m:Movie {movieId:row.movieId})
        MERGE(p)-[r:ACTED_IN]->(m)
        ON CREATE
          SET r.character=split(row.character,':')
